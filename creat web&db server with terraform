provider "aws" {
    region = "eu-west-2"
}



variable "ingressrule" {
    type = list(number)
    default = [ 80,443 ]
}

variable "egressrule" {
    type = list(number)
    default = [ 80,443 ]
}
resource "aws_instance" "db" {
  ami           = "ami-086b3de06dafe36c5" 
  instance_type = "t2.micro"
  
    tags = {
        name = "DB Server"
}
  }

resource "aws_instance" "web" {
  ami           = "ami-086b3de06dafe36c5" 
  instance_type = "t2.micro"
  security_groups = [aws_security_group.SecurityGroupwebtraffic.name]
tags = {
  "name" = "Web-Server"
}

  }

resource "aws_eip" "ElasticIp" { 
    instance = aws_instance.web.id
}



resource "aws_security_group" "SecurityGroupwebtraffic" {
   name = "Allow Web taffic"

   dynamic "ingress"  {
    iterator = port
    for_each = var.ingressrule
     content {
     cidr_blocks = [ "0.0.0.0/0" ]
     description = "allowallhttps"
     from_port = port.value
     ipv6_cidr_blocks = [ "::/0" ]
     prefix_list_ids = [ "pl-082b2916fa6d7b4b7" ]
     protocol = "tcp"
     self = false
     to_port = port.value
   }
   } 

   dynamic "egress"  {
    iterator = port
    for_each = var.egressrule
    content {
     cidr_blocks = [ "0.0.0.0/0" ]
     description = "allowallhttps"
     from_port = port.value
     ipv6_cidr_blocks = [ "::/0" ]
     prefix_list_ids = [ "pl-082b2916fa6d7b4b7" ]
     protocol = "tcp"
     self = false
     to_port = port.value
    }
   } 
}
output "privateIP" {
    value = aws_instance.db.private_ip
  
} 
output "publicIp" {
    value = aws_eip.ElasticIp.public_ip
  
} 
